<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clouds.igankong.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.clouds.igankong.po.User" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="department_sub" property="departmentSub" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="work_age" property="workAge" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="username_alias" property="usernameAlias" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="openID" property="openid" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="corpid" property="corpid" jdbcType="VARCHAR" />
    <result column="agentid" property="agentid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, username, sex, department, department_sub, role, age, title, work_age, position, 
    phone_number, username_alias, email, openID, userid, corpid, agentid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.clouds.igankong.po.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.clouds.igankong.po.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clouds.igankong.po.User" >
    insert into user (ID, username, sex, 
      department, department_sub, role, 
      age, title, work_age, 
      position, phone_number, username_alias, 
      email, openID, userid, 
      corpid, agentid)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{departmentSub,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{age,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{workAge,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{usernameAlias,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{corpid,jdbcType=VARCHAR}, #{agentid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clouds.igankong.po.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="departmentSub != null" >
        department_sub,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="workAge != null" >
        work_age,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="usernameAlias != null" >
        username_alias,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="openid != null" >
        openID,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="corpid != null" >
        corpid,
      </if>
      <if test="agentid != null" >
        agentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="departmentSub != null" >
        #{departmentSub,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="workAge != null" >
        #{workAge,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="usernameAlias != null" >
        #{usernameAlias,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="corpid != null" >
        #{corpid,jdbcType=VARCHAR},
      </if>
      <if test="agentid != null" >
        #{agentid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clouds.igankong.po.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentSub != null" >
        department_sub = #{record.departmentSub,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.workAge != null" >
        work_age = #{record.workAge,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null" >
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.usernameAlias != null" >
        username_alias = #{record.usernameAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openID = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.corpid != null" >
        corpid = #{record.corpid,jdbcType=VARCHAR},
      </if>
      <if test="record.agentid != null" >
        agentid = #{record.agentid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set ID = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      department_sub = #{record.departmentSub,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      work_age = #{record.workAge,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      username_alias = #{record.usernameAlias,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      openID = #{record.openid,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      corpid = #{record.corpid,jdbcType=VARCHAR},
      agentid = #{record.agentid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clouds.igankong.po.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="departmentSub != null" >
        department_sub = #{departmentSub,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="workAge != null" >
        work_age = #{workAge,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="usernameAlias != null" >
        username_alias = #{usernameAlias,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openID = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="corpid != null" >
        corpid = #{corpid,jdbcType=VARCHAR},
      </if>
      <if test="agentid != null" >
        agentid = #{agentid,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clouds.igankong.po.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      department_sub = #{departmentSub,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      work_age = #{workAge,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      username_alias = #{usernameAlias,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      openID = #{openid,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      corpid = #{corpid,jdbcType=VARCHAR},
      agentid = #{agentid,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>