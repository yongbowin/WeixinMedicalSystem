<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clouds.igankong.mapper.ReviewMapper" >
  <resultMap id="BaseResultMap" type="com.clouds.igankong.po.Review" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="review_time" property="reviewTime" jdbcType="VARCHAR" />
    <result column="review_openID" property="reviewOpenid" jdbcType="VARCHAR" />
    <result column="review_result" property="reviewResult" jdbcType="VARCHAR" />
    <result column="review_userid" property="reviewUserid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, review_time, review_openID, review_result, review_userid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.clouds.igankong.po.ReviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from review
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from review
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.clouds.igankong.po.ReviewExample" >
    delete from review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.clouds.igankong.po.Review" >
    insert into review (ID, review_time, review_openID, 
      review_result, review_userid)
    values (#{id,jdbcType=INTEGER}, #{reviewTime,jdbcType=VARCHAR}, #{reviewOpenid,jdbcType=VARCHAR}, 
      #{reviewResult,jdbcType=VARCHAR}, #{reviewUserid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clouds.igankong.po.Review" >
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="reviewTime != null" >
        review_time,
      </if>
      <if test="reviewOpenid != null" >
        review_openID,
      </if>
      <if test="reviewResult != null" >
        review_result,
      </if>
      <if test="reviewUserid != null" >
        review_userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="reviewTime != null" >
        #{reviewTime,jdbcType=VARCHAR},
      </if>
      <if test="reviewOpenid != null" >
        #{reviewOpenid,jdbcType=VARCHAR},
      </if>
      <if test="reviewResult != null" >
        #{reviewResult,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserid != null" >
        #{reviewUserid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clouds.igankong.po.ReviewExample" resultType="java.lang.Integer" >
    select count(*) from review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update review
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.reviewTime != null" >
        review_time = #{record.reviewTime,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewOpenid != null" >
        review_openID = #{record.reviewOpenid,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewResult != null" >
        review_result = #{record.reviewResult,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewUserid != null" >
        review_userid = #{record.reviewUserid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update review
    set ID = #{record.id,jdbcType=INTEGER},
      review_time = #{record.reviewTime,jdbcType=VARCHAR},
      review_openID = #{record.reviewOpenid,jdbcType=VARCHAR},
      review_result = #{record.reviewResult,jdbcType=VARCHAR},
      review_userid = #{record.reviewUserid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clouds.igankong.po.Review" >
    update review
    <set >
      <if test="reviewTime != null" >
        review_time = #{reviewTime,jdbcType=VARCHAR},
      </if>
      <if test="reviewOpenid != null" >
        review_openID = #{reviewOpenid,jdbcType=VARCHAR},
      </if>
      <if test="reviewResult != null" >
        review_result = #{reviewResult,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserid != null" >
        review_userid = #{reviewUserid,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clouds.igankong.po.Review" >
    update review
    set review_time = #{reviewTime,jdbcType=VARCHAR},
      review_openID = #{reviewOpenid,jdbcType=VARCHAR},
      review_result = #{reviewResult,jdbcType=VARCHAR},
      review_userid = #{reviewUserid,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>